---
title: Pentabarf XML
index: false
---
<%=
# vim: set ts=2 sw=2 et ai ft=ruby:

conf = conference()

require 'builder'
require 'tzinfo'
buffer = ''
xml = Builder::XmlMarkup.new(:target => buffer, :indent => 2)
tz = TZInfo::Timezone.get(conf[:timezone])

xml.instruct!
xml.schedule do
  xml.version conf[:schedule_version]
  xml.conference do
    xml.acronym conf[:acronym].downcase
    xml.title conf[:title]
    xml.subtitle conf[:subtitle]
    xml.venue conf[:venue]
    xml.city conf[:city]
    xml.start days.first[:conference_day]
    xml.end days.last[:conference_day]
    xml.days days.length
    #xml.release $conf.release
    xml.day_change conf[:day_change]
    xml.timeslot_duration conf[:timeslot_duration]
    xml.base_url conf[:export_base_url]
    xml.time_zone_name conf[:timezone]
  end
  xml.tracks do 
    tracks.each do | track |
      xml.track track[:name], {:online_qa=>track[:online_qa]}
    end
  end
  days.each_with_index do | day, index |
    time = Time.iso8601("#{day[:conference_day]}T#{conf[:day_change]}")
    next_day = Date.new(time.year, time.month, time.day) + 1
    day_start = Time.new(time.year, time.month, time.day, time.hour, time.min, time.sec, tz).iso8601()
    day_end = Time.new(next_day.year, next_day.month, next_day.day, time.hour, time.min, time.sec, tz).iso8601()
    xml.day({:index=>index + 1}, {:date=>day[:conference_day]}, {:start=>day_start}, {:end=>day_end}) do
      rooms.each do | room |

        xml.room({:name => room[:conference_room]}, {:slug => room[:slug]}) do
          room[:events_by_day][day[:slug].to_sym].map(&$to_event).each do |event|
            event_url = conf[:export_base_url] + 'event/' + event[:slug] + '/'
            xml.event({:id=>event[:event_id]}, {:guid=>event[:guid]}) do
              xml.date Time.strptime(event[:start_datetime], '%Y-%m-%d %H:%M:%S.%N %z').iso8601()
              xml.start event[:start_time]
              xml.duration Time.parse(event[:duration]).strftime('%H:%M')
              xml.room event[:room_name]
              xml.slug event[:slug]
              xml.url event_url
              xml.title event[:title]
              xml.subtitle event[:subtitle]
              xml.track event[:track_name]
              xml.type event[:type]
              xml.language event[:language]
              xml.abstract event[:abstract]
              xml.description event[:description]
              xml.persons do
                event[:speakers].map(&$to_speaker).each do |speaker|
                  xml.person( speaker[:name], {:id=>speaker[:person_id]} )
                end
              end
              xml.attachments do
                event[:attachments].each do |attachment|
		xml.attachment(attachment[:title], {:type=>attachment[:type]}, {:href=>@site.config[:base_url] + ($item_by_id.fetch(attachment[:identifier])).path})
                end
	      end
              xml.links do
                event[:links].each do |link|
                  xml.link(link[:title], {:href=>link[:url]})
                end
              end
            end
          end

        end
      end
    end
  end

end
buffer
%>
